// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authorization.proto

/*
Package authorization is a generated protocol buffer package.

It is generated from these files:
	authorization.proto

It has these top-level messages:
	AuthorizationRequest
	AuthorizationResponse
	Error
	SimpleResponse
*/
package authorization

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthorizationRequest struct {
	ClientID     string `protobuf:"bytes,1,opt,name=clientID" json:"clientID,omitempty"`
	Action       string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	ResourceName string `protobuf:"bytes,3,opt,name=resourceName" json:"resourceName,omitempty"`
}

func (m *AuthorizationRequest) Reset()                    { *m = AuthorizationRequest{} }
func (m *AuthorizationRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationRequest) ProtoMessage()               {}
func (*AuthorizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthorizationRequest) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *AuthorizationRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AuthorizationRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

type AuthorizationResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Jwt     string `protobuf:"bytes,2,opt,name=jwt" json:"jwt,omitempty"`
	Error   *Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *AuthorizationResponse) Reset()                    { *m = AuthorizationResponse{} }
func (m *AuthorizationResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationResponse) ProtoMessage()               {}
func (*AuthorizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthorizationResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AuthorizationResponse) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *AuthorizationResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	ErrorCode   string `protobuf:"bytes,1,opt,name=errorCode" json:"errorCode,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type SimpleResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error   *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SimpleResponse) Reset()                    { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string            { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()               {}
func (*SimpleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SimpleResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SimpleResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthorizationRequest)(nil), "authorization.AuthorizationRequest")
	proto.RegisterType((*AuthorizationResponse)(nil), "authorization.AuthorizationResponse")
	proto.RegisterType((*Error)(nil), "authorization.Error")
	proto.RegisterType((*SimpleResponse)(nil), "authorization.SimpleResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Authorization service

type AuthorizationClient interface {
	Authorize(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*AuthorizationResponse, error)
}

type authorizationClient struct {
	cc *grpc.ClientConn
}

func NewAuthorizationClient(cc *grpc.ClientConn) AuthorizationClient {
	return &authorizationClient{cc}
}

func (c *authorizationClient) Authorize(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*AuthorizationResponse, error) {
	out := new(AuthorizationResponse)
	err := grpc.Invoke(ctx, "/authorization.Authorization/Authorize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Authorization service

type AuthorizationServer interface {
	Authorize(context.Context, *AuthorizationRequest) (*AuthorizationResponse, error)
}

func RegisterAuthorizationServer(s *grpc.Server, srv AuthorizationServer) {
	s.RegisterService(&_Authorization_serviceDesc, srv)
}

func _Authorization_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizationServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authorization.Authorization/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizationServer).Authorize(ctx, req.(*AuthorizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authorization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authorization.Authorization",
	HandlerType: (*AuthorizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _Authorization_Authorize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authorization.proto",
}

func init() { proto.RegisterFile("authorization.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x6d, 0x4b, 0x6b, 0x33, 0xb5, 0x22, 0x63, 0x95, 0x50, 0x3c, 0x94, 0xd5, 0x83, 0x78,
	0xe8, 0xa1, 0xfe, 0x02, 0x51, 0x11, 0x2f, 0x1e, 0x22, 0x88, 0xd7, 0xb8, 0x1d, 0x70, 0xa5, 0xcd,
	0xc4, 0x99, 0x0d, 0x82, 0xbf, 0x5e, 0xb2, 0x4d, 0x6b, 0x52, 0x44, 0xbd, 0xe5, 0x7d, 0x33, 0xe1,
	0xbd, 0xb7, 0xbb, 0x70, 0x98, 0x16, 0xfe, 0x95, 0xc5, 0x7d, 0xa6, 0xde, 0x71, 0x36, 0xcd, 0x85,
	0x3d, 0xe3, 0xb0, 0x01, 0x4d, 0x06, 0xa3, 0xab, 0x3a, 0x48, 0xe8, 0xbd, 0x20, 0xf5, 0x38, 0x86,
	0xbe, 0x5d, 0x38, 0xca, 0xfc, 0xfd, 0x4d, 0xdc, 0x9a, 0xb4, 0xce, 0xa3, 0x64, 0xa3, 0xf1, 0x18,
	0x7a, 0xa9, 0x2d, 0x97, 0xe3, 0x76, 0x98, 0x54, 0x0a, 0x0d, 0xec, 0x09, 0x29, 0x17, 0x62, 0xe9,
	0x21, 0x5d, 0x52, 0xdc, 0x09, 0xd3, 0x06, 0x33, 0x0c, 0x47, 0x5b, 0x7e, 0x9a, 0x73, 0xa6, 0x84,
	0x31, 0xec, 0x6a, 0x61, 0x2d, 0xa9, 0x06, 0xbf, 0x7e, 0xb2, 0x96, 0x78, 0x00, 0x9d, 0xb7, 0x0f,
	0x5f, 0x79, 0x95, 0x9f, 0x78, 0x01, 0x5d, 0x12, 0x61, 0x09, 0x0e, 0x83, 0xd9, 0x68, 0xda, 0x2c,
	0x7a, 0x5b, 0xce, 0x92, 0xd5, 0x8a, 0xb9, 0x83, 0x6e, 0xd0, 0x78, 0x02, 0x51, 0x20, 0xd7, 0x3c,
	0xa7, 0xaa, 0xd2, 0x37, 0xc0, 0x09, 0x0c, 0xe6, 0xa4, 0x56, 0x5c, 0x5e, 0x2b, 0x56, 0x47, 0xe6,
	0x09, 0xf6, 0x1f, 0xdd, 0x32, 0x5f, 0xd0, 0x3f, 0x22, 0x6f, 0x02, 0xb6, 0xff, 0x0c, 0x38, 0x73,
	0x30, 0x6c, 0x9c, 0x08, 0x3e, 0x43, 0xb4, 0x06, 0x84, 0xa7, 0x5b, 0xbf, 0xfe, 0x74, 0x59, 0xe3,
	0xb3, 0xdf, 0x97, 0x56, 0x71, 0xcd, 0xce, 0x4b, 0x2f, 0x3c, 0x81, 0xcb, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x8b, 0x24, 0xa3, 0xdd, 0x19, 0x02, 0x00, 0x00,
}
